# docker-compose.yaml
version: '3.8'
services:
  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    restart: unless-stopped
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - /home/${USER}/containers/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1
    networks:
      - devops-net
  sonarqube:
    image: sonarqube:8.9.7-community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - type: bind
        source: /home/${USER}/containers/sonarqube/data
        target: /opt/sonarqube/data
      - type: bind
        source: /home/${USER}/containers/sonarqube/extensions
        target: /opt/sonarqube/extensions
      - type: bind
        source: /home/${USER}/containers/sonarqube/logs
        target: /opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - devops-net
  init:
    image: bash
    privileged: true
    user: root
    volumes:
      - ./init.sh:/mnt/init.sh
    command: [ "sh", "-e", "/mnt/init.sh" ]
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    ports:
      - '5432:5432'
    volumes:
      - type: bind
        source: /home/${USER}/containers/postgresql/conf
        target: /var/lib/postgresql
      - type: bind
        source: /home/${USER}/containers/postgresql/data
        target: /var/lib/postgresql/data
    networks:
      - devops-net
networks:
  devops-net:
    external: true
